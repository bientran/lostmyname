/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
module.exports = __webpack_require__(2);


/***/ }),
/* 1 */
/***/ (function(module, exports) {

(function(){
    
	var HeaderInformation = function(selector, btn) {
		var $ele = $(selector);
		var $closeBtn = $ele.find(btn);
		var init = function() {
			if (typeof $closeBtn !== 'undefined' && $closeBtn.length > 0) {
				$closeBtn.on('click', function() {
					$ele.slideUp();
				});
			}
		};

		return {
			init: init
		}
	}

	var headerInfor = new HeaderInformation('.lost-my-name__information', '.lost-my-name__information-close');
	headerInfor.init();

	var ToggleMenu = function () {
		var leadershipHeader = $(".lost-my-name__header");
		var menuWrapper = leadershipHeader.find(".lost-my-name__header__right-nav-wrapper");
	    var toggleBtn = leadershipHeader.find(".lost-my-name__header__toggle-button");

		var animatedMenu = function () {
			$(window).scroll($.debounce(5, function () {
			    if ($(window).scrollTop() > 350) {
			        leadershipHeader.addClass('animated');
			    } else {
			        leadershipHeader.removeClass('animated');
			    }
			}));
		}

		var showHideMenu = function (selector, isShown) {
		    var nav = selector.next().next().next();
	        if (isShown) {
	            selector.addClass('open');
	            nav.css('right', 0);
	            nav.prev().css('right', 0);
	            $('.nav-mask').fadeIn('fast');
	            $('html, body').css('overflow', 'hidden');
	        } else {
	            selector.removeClass('open');
	            nav.removeAttr('style');
	            nav.prev().removeAttr('style');
	            $('.nav-mask').fadeOut('fast');
	            $('html, body').removeAttr('style');
	        }
	    }

		var toggle = function (selector) {
		    var nav = selector.next().next().next();
			if (parseInt(nav.css('right'), 10) < 0) {
				showHideMenu(selector, true);
			} else {
				showHideMenu(selector, false);
			}
		}
        
		var init = function () {
			if (typeof leadershipHeader !== 'undefined' && leadershipHeader.length > 0) {
				// Scroll to animate menu
				animatedMenu();

			    $(window).bind('blur', function () {
					if (toggleBtn.hasClass('open')) toggle(toggleBtn);
			    });
				$(document).bind('click', function () {
					if ($(event.target).parents(".lost-my-name__header__nav").length == 0 && toggleBtn.hasClass('open')) toggle(toggleBtn);
				});

				toggleBtn.bind('click', function (e) {
				    e.stopPropagation();
				    toggle(toggleBtn);
				});
			}
		}
        
        return {
            init: init
        }
	}
	
	var Slider = function(selector, options) {
		var ele = $(selector);
		var settings = options || '';

		var init = function() {
			if (typeof ele !== 'undefined' && ele.length > 0) {
				ele.ubislider(settings); 
			}
		}

		return {
			init: init
		}
	}

	var BookCutomizer = function() {
		var ele = $(".lost-my-name__book-editor");
		var wish = ele.find(".lost-my-name__book-editor__tabbed .wish");
		var wishOptions = ele.find(".wish-option");
		var adventuresTabs = ele.find("#second-wish .tabs .wish");
		var adventuresContents = ele.find('#second-wish .character-tab');

		var init = function() {
			if (ele.length > 0 && wish.length > 0 && adventuresTabs.length > 0) {
				wish.on('click', function() {
					var $this = $(this);
					var target = $this.attr('data-target');

					// remove active wish
					wish.removeClass('active');
					$this.addClass('active');

					// hide all wish options
					wishOptions.fadeOut();
					$("#" + target).fadeIn();
				});

				adventuresTabs.on('click', function() {
					var $this = $(this);
					var target = $this.attr('data-target');

					// remove active wish
					adventuresTabs.removeClass('active');
					$this.addClass('active');

					// hide all wish options
					adventuresContents.hide();
					$('#' + target).fadeIn();
				});

				$(document).on('click', function(event) {
					if ($(event.target).parents('.lost-my-name__options-wrapper').length == 0) {
						wishOptions.fadeOut();
						wish.removeClass('active');
					}
				});
			}
		}

		return {
			init: init
		}
	}
    
    var menu = new ToggleMenu();
	menu.init();

	var bookCutomizer = new BookCutomizer();
	bookCutomizer.init();

	var SlickSlider = function(selector, options) {
		var $ele = $(selector);
		var settings = options || {};

		var init = function() {
			$ele.slick(settings)
		};

		return {
			init: init
		}
	};

	var bannerSlider = new SlickSlider('.lost-my-name__banner__slider', {
		dots: false,
		arrows: false,
		autoplay: true,
		autoplaySpeed: 5000
	});
	bannerSlider.init();

	// Responsive images
	$.fn.imgLoad = function (callback) {
        return this.each(function () {
            if (callback) {
                if (this.complete || /*for IE 10-*/ $(this).height() > 0) {
                    callback.apply(this);
                }
                else {
                    $(this).on('load', function () {
                        callback.apply(this);
                    });
                }
            }
        });
    };

    var PhotoGallery = function (selector, child) {
		var photoGallery = $(selector);
        var photos = photoGallery.find(child + " img");

		var resizeImages = function() {
			photos.imgLoad(function () {
			    var $this = $(this);
			    var parentInfor = {
			        width: $this.parent().width(),
			        height: $this.parent().height()
			    };
			    var imgInfor = {
			        width: $this.width(),
			        height: $this.height()
				};

			    var fillClass = '';

			    if (parentInfor.width / parentInfor.height > imgInfor.width / imgInfor.height) {
			        fillClass = (parentInfor.height > parentInfor.width)
			            ? 'fillheight'
			            : 'fillwidth';
			    } else {
			        fillClass = (imgInfor.height > imgInfor.width)
			            ? 'fillwidth'
			            : 'fillheight';
			    }
			    $(this).removeClass('fillheight').removeClass('fillwidth').addClass(fillClass);
			});
		}

        var init = function () {
            // Check ele defined or not
			if (typeof photoGallery !== 'undefined' && typeof photos !== 'undefined') {

				// resize at first loaded
				resizeImages();

				// resize on user resize window
				$(window).on('resize orientationchange', $.debounce(5, resizeImages));
			}
        }

        return {
            init: init
        }
    }

	var carouselSlider = new PhotoGallery('.lost-my-name__banner__slider', '.lost-my-name__banner__slider-item__thumbnail');
	carouselSlider.init();
	var carouselSlider2 = new PhotoGallery('.lost-my-name__photo-gallery__photos', '.lost-my-name__photo-gallery-photos__content');
	carouselSlider2.init();
	var carouselSlider3 = new PhotoGallery('.lost-my-name__product__photo-gallery', '.ubislider-image-container');
	carouselSlider3.init();

	var productImageSlider = new Slider('#product-image-slider', {
		arrowsToggle: true,
		type: 'ecommerce',
		hideArrows: true,
		autoSlideOnLastClick: true,
		modalOnClick: true,
		onTopImageChange: function(e){
			var carouselSlider3 = new PhotoGallery('.lost-my-name__product__photo-gallery', '.ubislider-image-container');
			carouselSlider3.init();
		}
	});
	productImageSlider.init();

	// gender box active class
	function setActiveGenderBox(inputBox) {
		var $genderBox = $('.gender-box');
		var $el = $genderBox.find('>label');
		var $dropdown = $genderBox.find('.dropdown-menu >li');
		var $input = $(inputBox);

		// remove click to hide dropdown
		$dropdown.click(function(e) {
			e.stopPropagation();
			var _this = $(this);

			// reset all character's active
			$dropdown.removeClass('active');

			// set active characters
			_this.addClass('active');

			// set value for input
			$input.val(_this.data('value'));
			console.log($input.val())

			return false;
		});

		$el.click(function() {
			var _this = $(this);
			
			if (!_this.hasClass('active')) {
				// reset all active
				$el.removeClass('active');

				// reset value
				$input.val('INVALID');
				console.log($input.val());

				$el.parent().find('.dropdown-menu >li').removeClass('active');
				_this.addClass('active');
			}
		});
		
	}
	setActiveGenderBox('#gender');

	$('.lost-my-name__photo-gallery__photos').masonry({
		// options
		itemSelector: '.lost-my-name__photo-gallery__photos-item',
		columnWidth: '.grid-sizer',
		percentPosition: true
	});

	// Magnific popup for images and videos
	var MagnificPopup = function(selector, options) {
		var $ele = $(selector);
		var settings = options || {};

		var init = function() {
			if (typeof $ele !== 'undefined' && $ele.length > 0) {
				$ele.magnificPopup(options);
			}
		}

		return {
			init: init
		}
	} 

	var headerSlider = new MagnificPopup('.image-box', {
		type: 'image',
		mainClass: 'mfp-with-zoom',
		zoom: {
			enabled: true,
			duration: 300,
			easing: 'ease-in-out',
			opener: function(openerElement) {
				return openerElement.is('img') ? openerElement : openerElement.find('img');
			}
		}
	});
	headerSlider.init();
	var photoGallery = new MagnificPopup('.video-box', {
		type: 'iframe',
		removalDelay: 160,
		fixedContentPos: false,
		mainClass: 'mfp-with-zoom'
	});
	photoGallery.init();
})();

/***/ }),
/* 2 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);